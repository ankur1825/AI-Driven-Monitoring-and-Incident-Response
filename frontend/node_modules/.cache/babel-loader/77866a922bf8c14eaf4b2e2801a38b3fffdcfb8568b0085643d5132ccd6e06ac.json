{"ast":null,"code":"import React,{useEffect,useState}from'react';import api from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RCAViewer=_ref=>{let{alert}=_ref;const[rca,setRca]=useState('');useEffect(()=>{if(alert){api.post('/rca/generate',{logs:alert.logs,traces:'',metrics:''}).then(res=>setRca(res.data.rca));}},[alert]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Root Cause Analysis\"}),/*#__PURE__*/_jsx(\"pre\",{children:rca})]});};export default RCAViewer;","map":{"version":3,"names":["React","useEffect","useState","api","jsx","_jsx","jsxs","_jsxs","RCAViewer","_ref","alert","rca","setRca","post","logs","traces","metrics","then","res","data","children"],"sources":["/Users/ankurkashyap/Documents/Cloud-business-project/AI-Driven-Monitoring-and-Incident-Response/frontend/src/components/RCAViewer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\n\nconst RCAViewer = ({ alert }) => {\n  const [rca, setRca] = useState('');\n\n  useEffect(() => {\n    if (alert) {\n      api.post('/rca/generate', { logs: alert.logs, traces: '', metrics: '' })\n        .then(res => setRca(res.data.rca));\n    }\n  }, [alert]);\n\n  return (\n    <div>\n      <h3>Root Cause Analysis</h3>\n      <pre>{rca}</pre>\n    </div>\n  );\n};\n\nexport default RCAViewer;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAe,IAAd,CAAEC,KAAM,CAAC,CAAAD,IAAA,CAC1B,KAAM,CAACE,GAAG,CAAEC,MAAM,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAElCD,SAAS,CAAC,IAAM,CACd,GAAIS,KAAK,CAAE,CACTP,GAAG,CAACU,IAAI,CAAC,eAAe,CAAE,CAAEC,IAAI,CAAEJ,KAAK,CAACI,IAAI,CAAEC,MAAM,CAAE,EAAE,CAAEC,OAAO,CAAE,EAAG,CAAC,CAAC,CACrEC,IAAI,CAACC,GAAG,EAAIN,MAAM,CAACM,GAAG,CAACC,IAAI,CAACR,GAAG,CAAC,CAAC,CACtC,CACF,CAAC,CAAE,CAACD,KAAK,CAAC,CAAC,CAEX,mBACEH,KAAA,QAAAa,QAAA,eACEf,IAAA,OAAAe,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5Bf,IAAA,QAAAe,QAAA,CAAMT,GAAG,CAAM,CAAC,EACb,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}