{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import api from '../services/api';\n// import ForecastChart from './ForecastChart';\n// const Dashboard = () => {\n//   const [forecast, setForecast] = useState([]);\n//   useEffect(() => {\n//     api.get('/predict/cpu').then(res => setForecast(res.data));\n//   }, []);\n//   return (\n//     <div>\n//       <h2>CPU Forecast</h2>\n//       <ForecastChart data={forecast} />\n//     </div>\n//   );\n// };\n// export default Dashboard;\n//---------------------------------\n// import React from 'react';\n// const Dashboard = () => {\n//   return (\n//     <div>\n//       <h2>CPU Forecast</h2>\n//     </div>\n//   );\n// };\n// export default Dashboard;\n//---------------------------------\nimport React,{useEffect,useState}from'react';import api from'../services/api';import ForecastChart from'./ForecastChart';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[forecast,setForecast]=useState([]);useEffect(()=>{api.get('/predict/cpu').then(res=>setForecast(res.data)).catch(err=>console.error('API Error:',err));},[]);console.log('ForecastChart:',ForecastChart);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"CPU Forecast\"}),/*#__PURE__*/_jsx(\"pre\",{children:JSON.stringify(forecast,null,2)}),/*#__PURE__*/_jsx(ForecastChart,{data:forecast})]});};export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","api","ForecastChart","jsx","_jsx","jsxs","_jsxs","Dashboard","forecast","setForecast","get","then","res","data","catch","err","console","error","log","children","JSON","stringify"],"sources":["/Users/ankurkashyap/Documents/Cloud-business-project/AI-Driven-Monitoring-and-Incident-Response/frontend/src/components/Dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import api from '../services/api';\n// import ForecastChart from './ForecastChart';\n\n// const Dashboard = () => {\n//   const [forecast, setForecast] = useState([]);\n\n//   useEffect(() => {\n//     api.get('/predict/cpu').then(res => setForecast(res.data));\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>CPU Forecast</h2>\n//       <ForecastChart data={forecast} />\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n//---------------------------------\n// import React from 'react';\n\n// const Dashboard = () => {\n//   return (\n//     <div>\n//       <h2>CPU Forecast</h2>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n//---------------------------------\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport ForecastChart from './ForecastChart';\n\nconst Dashboard = () => {\n  const [forecast, setForecast] = useState([]);\n\n  useEffect(() => {\n    api.get('/predict/cpu')\n      .then(res => setForecast(res.data))\n      .catch(err => console.error('API Error:', err));\n  }, []);\n\n  console.log('ForecastChart:', ForecastChart);\n\n  return (\n    <div>\n      <h2>CPU Forecast</h2>\n      <pre>{JSON.stringify(forecast, null, 2)}</pre>\n      <ForecastChart data={forecast} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n\n"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5C,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACdE,GAAG,CAACS,GAAG,CAAC,cAAc,CAAC,CACpBC,IAAI,CAACC,GAAG,EAAIH,WAAW,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC,CAClCC,KAAK,CAACC,GAAG,EAAIC,OAAO,CAACC,KAAK,CAAC,YAAY,CAAEF,GAAG,CAAC,CAAC,CACnD,CAAC,CAAE,EAAE,CAAC,CAENC,OAAO,CAACE,GAAG,CAAC,gBAAgB,CAAEhB,aAAa,CAAC,CAE5C,mBACEI,KAAA,QAAAa,QAAA,eACEf,IAAA,OAAAe,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBf,IAAA,QAAAe,QAAA,CAAMC,IAAI,CAACC,SAAS,CAACb,QAAQ,CAAE,IAAI,CAAE,CAAC,CAAC,CAAM,CAAC,cAC9CJ,IAAA,CAACF,aAAa,EAACW,IAAI,CAAEL,QAAS,CAAE,CAAC,EAC9B,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}