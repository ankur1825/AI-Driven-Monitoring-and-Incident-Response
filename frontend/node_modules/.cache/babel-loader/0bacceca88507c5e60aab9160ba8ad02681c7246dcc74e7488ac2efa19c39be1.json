{"ast":null,"code":"var _jsxFileName = \"/Users/ankurkashyap/Documents/Cloud-business-project/AI-Driven-Monitoring-and-Incident-Response/frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import api from '../services/api';\n// import ForecastChart from './ForecastChart';\n\n// const Dashboard = () => {\n//   const [forecast, setForecast] = useState([]);\n\n//   useEffect(() => {\n//     api.get('/predict/cpu').then(res => setForecast(res.data));\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>CPU Forecast</h2>\n//       <ForecastChart data={forecast} />\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n//---------------------------------\n// import React from 'react';\n\n// const Dashboard = () => {\n//   return (\n//     <div>\n//       <h2>CPU Forecast</h2>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n//---------------------------------\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport ForecastChart from './ForecastChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [forecast, setForecast] = useState([]);\n  useEffect(() => {\n    api.get('/predict/cpu').then(res => setForecast(res.data)).catch(err => console.error('API Error:', err));\n  }, []);\n  console.log('ForecastChart:', ForecastChart);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CPU Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(forecast, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ForecastChart, {\n      data: forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Ydn6hUZqbmyQnL7JGFANHgW/va4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","api","ForecastChart","jsxDEV","_jsxDEV","Dashboard","_s","forecast","setForecast","get","then","res","data","catch","err","console","error","log","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/ankurkashyap/Documents/Cloud-business-project/AI-Driven-Monitoring-and-Incident-Response/frontend/src/components/Dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import api from '../services/api';\n// import ForecastChart from './ForecastChart';\n\n// const Dashboard = () => {\n//   const [forecast, setForecast] = useState([]);\n\n//   useEffect(() => {\n//     api.get('/predict/cpu').then(res => setForecast(res.data));\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>CPU Forecast</h2>\n//       <ForecastChart data={forecast} />\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\n//---------------------------------\n// import React from 'react';\n\n// const Dashboard = () => {\n//   return (\n//     <div>\n//       <h2>CPU Forecast</h2>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n//---------------------------------\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport ForecastChart from './ForecastChart';\n\nconst Dashboard = () => {\n  const [forecast, setForecast] = useState([]);\n\n  useEffect(() => {\n    api.get('/predict/cpu')\n      .then(res => setForecast(res.data))\n      .catch(err => console.error('API Error:', err));\n  }, []);\n\n  console.log('ForecastChart:', ForecastChart);\n\n  return (\n    <div>\n      <h2>CPU Forecast</h2>\n      <pre>{JSON.stringify(forecast, null, 2)}</pre>\n      <ForecastChart data={forecast} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdE,GAAG,CAACQ,GAAG,CAAC,cAAc,CAAC,CACpBC,IAAI,CAACC,GAAG,IAAIH,WAAW,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC,CAClCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEF,GAAG,CAAC,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACE,GAAG,CAAC,gBAAgB,EAAEf,aAAa,CAAC;EAE5C,oBACEE,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBlB,OAAA;MAAAc,QAAA,EAAMK,IAAI,CAACC,SAAS,CAACjB,QAAQ,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9ClB,OAAA,CAACF,aAAa;MAACU,IAAI,EAAEL;IAAS;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV,CAAC;AAAChB,EAAA,CAlBID,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAoBf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}